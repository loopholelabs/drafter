name: hydrun CI

on:
  push:
    paths-ignore:
      - ".github/signatures/**"
  pull_request:
    paths-ignore:
      - ".github/signatures/**"
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build-linux:
    runs-on: ${{ matrix.target.runner }}
    permissions:
      contents: read
    strategy:
      matrix:
        target:
          # Tests
#          - id: test
#            src: .
#            os: golang:bookworm
#            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
#            cmd: GOFLAGS="-short" ./Hydrunfile test
#            dst: out/nonexistent
#            runner: depot-ubuntu-22.04-32

          # Binaries
          - id: go.drafter-nat
            src: .
            os: golang:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
            cmd: ./Hydrunfile go drafter-nat
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: go.drafter-forwarder
            src: .
            os: golang:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
            cmd: ./Hydrunfile go drafter-forwarder
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: go.drafter-agent
            src: .
            os: golang:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
            cmd: ./Hydrunfile go drafter-agent
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: go.drafter-liveness
            src: .
            os: golang:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
            cmd: ./Hydrunfile go drafter-liveness
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: go.drafter-snapshotter
            src: .
            os: golang:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
            cmd: ./Hydrunfile go drafter-snapshotter
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: go.drafter-packager
            src: .
            os: golang:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
            cmd: ./Hydrunfile go drafter-packager
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: go.drafter-runner
            src: .
            os: golang:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
            cmd: ./Hydrunfile go drafter-runner
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: go.drafter-registry
            src: .
            os: golang:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
            cmd: ./Hydrunfile go drafter-registry
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: go.drafter-mounter
            src: .
            os: golang:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
            cmd: ./Hydrunfile go drafter-mounter
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: go.drafter-peer
            src: .
            os: golang:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
            cmd: ./Hydrunfile go drafter-peer
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: go.drafter-terminator
            src: .
            os: golang:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/go-build'
            cmd: ./Hydrunfile go drafter-terminator
            dst: out/*
            runner: depot-ubuntu-22.04-32

          # OCI OS
          - id: os.drafteros-oci-x86_64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build -v /tmp/ccache/buildroot:/root/.buildroot-ccache'
            cmd: ./Hydrunfile os drafteros-oci-firecracker-x86_64_defconfig drafteros-oci-x86_64.tar.zst
            dst: out/drafteros-oci-x86_64.tar.zst
            runner: depot-ubuntu-22.04-32
          - id: os.drafteros-oci-x86_64_pvm
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build -v /tmp/ccache/buildroot:/root/.buildroot-ccache'
            cmd: ./Hydrunfile os drafteros-oci-firecracker-x86_64_pvm_defconfig drafteros-oci-x86_64_pvm.tar.zst
            dst: out/drafteros-oci-x86_64_pvm.tar.zst
            runner: depot-ubuntu-22.04-32
          - id: os.drafteros-oci-aarch64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build -v /tmp/ccache/buildroot:/root/.buildroot-ccache'
            cmd: ./Hydrunfile os drafteros-oci-firecracker-aarch64_defconfig drafteros-oci-aarch64.tar.zst
            dst: out/drafteros-oci-aarch64.tar.zst
            runner: depot-ubuntu-22.04-32
          
          # k3s Server OS
          - id: os.drafteros-k3s-server-x86_64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build -v /tmp/ccache/buildroot:/root/.buildroot-ccache'
            cmd: ./Hydrunfile os drafteros-k3s-server-firecracker-x86_64_defconfig drafteros-k3s-server-x86_64.tar.zst
            dst: out/drafteros-k3s-server-x86_64.tar.zst
            runner: depot-ubuntu-22.04-32
          - id: os.drafteros-k3s-server-x86_64_pvm
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build -v /tmp/ccache/buildroot:/root/.buildroot-ccache'
            cmd: ./Hydrunfile os drafteros-k3s-server-firecracker-x86_64_pvm_defconfig drafteros-k3s-server-x86_64_pvm.tar.zst
            dst: out/drafteros-k3s-server-x86_64_pvm.tar.zst
            runner: depot-ubuntu-22.04-32
          - id: os.drafteros-k3s-server-aarch64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build -v /tmp/ccache/buildroot:/root/.buildroot-ccache'
            cmd: ./Hydrunfile os drafteros-k3s-server-firecracker-aarch64_defconfig drafteros-k3s-server-aarch64.tar.zst
            dst: out/drafteros-k3s-server-aarch64.tar.zst
            runner: depot-ubuntu-22.04-32
          
          # k3s Client OS
          - id: os.drafteros-k3s-client-x86_64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build -v /tmp/ccache/buildroot:/root/.buildroot-ccache'
            cmd: ./Hydrunfile os drafteros-k3s-client-firecracker-x86_64_defconfig drafteros-k3s-client-x86_64.tar.zst
            dst: out/drafteros-k3s-client-x86_64.tar.zst
            runner: depot-ubuntu-22.04-32
          - id: os.drafteros-k3s-client-x86_64_pvm
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build -v /tmp/ccache/buildroot:/root/.buildroot-ccache'
            cmd: ./Hydrunfile os drafteros-k3s-client-firecracker-x86_64_pvm_defconfig drafteros-k3s-client-x86_64_pvm.tar.zst
            dst: out/drafteros-k3s-client-x86_64_pvm.tar.zst
            runner: depot-ubuntu-22.04-32
          - id: os.drafteros-k3s-client-aarch64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build -v /tmp/ccache/buildroot:/root/.buildroot-ccache'
            cmd: ./Hydrunfile os drafteros-k3s-client-firecracker-aarch64_defconfig drafteros-k3s-client-aarch64.tar.zst
            dst: out/drafteros-k3s-client-aarch64.tar.zst
            runner: depot-ubuntu-22.04-32

          # OCI runtime bundles
          - id: oci.valkey-x86_64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build'
            cmd: ./Hydrunfile oci docker://valkey/valkey:latest amd64 oci-valkey-x86_64.tar.zst
            dst: out/oci-valkey-x86_64.tar.zst
            runner: depot-ubuntu-22.04-32
          - id: oci.valkey-aarch64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build'
            cmd: ./Hydrunfile oci docker://valkey/valkey:latest arm64 oci-valkey-aarch64.tar.zst
            dst: out/oci-valkey-aarch64.tar.zst
            runner: depot-ubuntu-22.04-32
          - id: oci.postgres-x86_64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build'
            cmd: ./Hydrunfile oci docker://postgres:latest amd64 oci-postgres-x86_64.tar.zst
            dst: out/oci-postgres-x86_64.tar.zst
            runner: depot-ubuntu-22.04-32
          - id: oci.postgres-aarch64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build'
            cmd: ./Hydrunfile oci docker://postgres:latest arm64 oci-postgres-aarch64.tar.zst
            dst: out/oci-postgres-aarch64.tar.zst
            runner: depot-ubuntu-22.04-32
          - id: oci.ollama-x86_64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build'
            cmd: ./Hydrunfile oci docker://ollama/ollama:latest amd64 oci-ollama-x86_64.tar.zst
            dst: out/oci-ollama-x86_64.tar.zst
            runner: depot-ubuntu-22.04-32
          - id: oci.ollama-aarch64
            src: .
            os: fedora:41
            flags: -e '-v /tmp/ccache/go:/root/.cache/go-build'
            cmd: ./Hydrunfile oci docker://ollama/ollama:latest arm64 oci-ollama-aarch64.tar.zst
            dst: out/oci-ollama-aarch64.tar.zst
            runner: depot-ubuntu-22.04-32

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore ccache
        uses: actions/cache/restore@v4
        with:
          path: |
            /tmp/ccache
          key: cache-ccache-${{ matrix.target.id }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up hydrun
        run: |
          curl -L -o /tmp/hydrun "https://github.com/pojntfx/hydrun/releases/latest/download/hydrun.linux-$(uname -m)"
          sudo install /tmp/hydrun /usr/local/bin
      - name: Build with hydrun
        working-directory: ${{ matrix.target.src }}
        run: hydrun -o ${{ matrix.target.os }} ${{ matrix.target.flags }} "${{ matrix.target.cmd }}"
      - name: Fix permissions for output
        run: sudo chown -R $USER .
      - name: Save ccache
        uses: actions/cache/save@v4
        with:
          path: |
            /tmp/ccache
          key: cache-ccache-${{ matrix.target.id }}
      - name: Upload output
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target.id }}
          path: ${{ matrix.target.dst }}

  publish-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build-linux

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download output
        uses: actions/download-artifact@v4
        with:
          path: /tmp/out
      - name: Extract branch name
        id: extract_branch
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      - name: Publish pre-release to GitHub releases
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ steps.extract_branch.outputs.branch }}
          prerelease: true
          files: |
            /tmp/out/*/*
      - name: Publish release to GitHub releases
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          prerelease: false
          files: |
            /tmp/out/*/*
