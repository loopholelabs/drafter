name: Build OCI

on:
  push:
  pull_request:

jobs:
  build-oci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.2

      - name: deps
        run: sudo apt install umoci

      - name: Setup dest
        run: |
          mkdir /tmp/oci

      - name: Build valkey
        run: |
          make -f oci/Makefile build/oci OCI_IMAGE_URI="docker://valkey/valkey:latest" OCI_IMAGE_ARCHITECTURE="amd64"
          go run ./cmd/drafter-packager --package-path "/tmp/oci/oci-valkey-x86_64.tar.zst" --devices '[{"name": "oci","path": "out/blueprint/oci.ext4"}]'

      - name: Build postgres
        run: |
          make -f oci/Makefile build/oci OCI_IMAGE_URI="docker://postgres:latest" OCI_IMAGE_ARCHITECTURE="amd64"
          go run ./cmd/drafter-packager --package-path "/tmp/oci/oci-postgres-x86_64.tar.zst" --devices '[{"name": "oci","path": "out/blueprint/oci.ext4"}]'

      - name: Build ollama
        run: |
          make -f oci/Makefile build/oci OCI_IMAGE_URI="docker://ollama/ollama:latest" OCI_IMAGE_ARCHITECTURE="amd64"
          go run ./cmd/drafter-packager --package-path "/tmp/oci/oci-ollama-x86_64.tar.zst" --devices '[{"name": "oci","path": "out/blueprint/oci.ext4"}]'

      - name: Show oci files
        run: ls /tmp/oci -l

      - name: Publish pre-release to GitHub releases
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ github.ref_name }}
          prerelease: true
          files: |
            /tmp/oci/*

      - name: Publish release to GitHub releases
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          prerelease: false
          files: |
            /tmp/oci/*
